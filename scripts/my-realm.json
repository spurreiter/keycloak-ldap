{
  "accessCodeLifespan": 60,
  "accessCodeLifespanLogin": 1800,
  "accessCodeLifespanUserAction": 300,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "adminEventsDetailsEnabled": false,
  "adminEventsEnabled": false,
  "attributes": {
    "clientOfflineSessionIdleTimeout": "0",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "clientSessionMaxLifespan": "0"
  },
  "authenticationFlows": [
    {
      "alias": "Account verification options",
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Method with which to verity the existing account",
      "id": "15d78862-61e2-4127-a4a0-c1fe16d68332",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Authentication Options",
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Authentication options.",
      "id": "b3fc5968-4c5c-42c2-8796-ee2834123b3b",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Browser - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "dd96ce9e-3f8b-4d17-9a90-4c1d6910e25d",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Direct Grant - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "a760511f-6ae0-4e6b-ac65-9de8c4c94ea7",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "First broker login - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "8f924b68-f319-4bf0-8b72-138b5a0fce17",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Handle Existing Account",
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "id": "28051d92-9285-48c4-9dc7-bf13c7924663",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Reset - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "id": "d62502cc-9557-4da1-a24e-941fb4891f1b",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "User creation or linking",
      "authenticationExecutions": [
        {
          "authenticator": "idp-create-user-if-unique",
          "authenticatorConfig": "create unique user config",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow for the existing/non-existing user alternatives",
      "id": "949d3fc4-9a53-4bd0-bb2f-6fee96ffc252",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Verify Existing Account by Re-authentication",
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reauthentication of existing account",
      "id": "ac5dbc28-4fdb-4e3c-a733-375a770acc6c",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "browser",
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "autheticatorFlow": false,
          "priority": 25,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "browser based authentication",
      "id": "9eebc92f-6145-4426-8168-c95749e6cbde",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "clients",
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Base authentication for clients",
      "id": "aa0659bb-3ac5-4ca7-af5b-d609f7f7b88a",
      "providerId": "client-flow",
      "topLevel": true
    },
    {
      "alias": "direct grant",
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "priority": 30,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "OpenID Connect Resource Owner Grant",
      "id": "765f3130-4d52-4b99-8652-0ab346a2a729",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "docker auth",
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Used by Docker clients to authenticate against the IDP",
      "id": "9134c2d6-1e45-40b9-8e01-9b056c9ba44f",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "first broker login",
      "authenticationExecutions": [
        {
          "authenticator": "idp-review-profile",
          "authenticatorConfig": "review profile config",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "id": "b6382cfd-1b32-4cd8-bce0-ca181934ac31",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "forms",
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Username, password, otp and other auth forms.",
      "id": "d53926ec-d14b-4aae-95c1-e5568f0c56c8",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "http challenge",
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "id": "5fe87985-bf56-44f8-bb5c-3555505b6681",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration",
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration flow",
      "id": "5dab2a02-cdae-48ae-a054-6df890ac56f2",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration form",
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "autheticatorFlow": false,
          "priority": 50,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "autheticatorFlow": false,
          "priority": 60,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration form",
      "id": "216eaaae-6d12-46ff-818a-6e41465cb05a",
      "providerId": "form-flow",
      "topLevel": false
    },
    {
      "alias": "reset credentials",
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "priority": 40,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reset credentials for a user if they forgot their password or something",
      "id": "541e8e82-750e-4ead-a866-3f569dcaa78e",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "saml ecp",
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "SAML ECP Profile Authentication Flow",
      "id": "1ce2f8f8-389d-4885-8a8d-a9df92b450b8",
      "providerId": "basic-flow",
      "topLevel": true
    }
  ],
  "authenticatorConfig": [
    {
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      },
      "id": "a86c7cef-cace-4249-a759-e31e2ba22333"
    },
    {
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      },
      "id": "fbba40de-12ef-483f-b3eb-bc0878ea3129"
    }
  ],
  "browserFlow": "browser",
  "browserSecurityHeaders": {
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "contentSecurityPolicyReportOnly": "",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "xContentTypeOptions": "nosniff",
    "xFrameOptions": "SAMEORIGIN",
    "xRobotsTag": "none",
    "xXSSProtection": "1; mode=block"
  },
  "bruteForceProtected": false,
  "clientAuthenticationFlow": "clients",
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ],
    "my-service": [
      {
        "client": "my-service-client",
        "roles": [
          "test"
        ]
      }
    ]
  },
  "clientScopes": [
    {
      "attributes": {
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: address",
      "id": "7868fb92-0a09-4b24-977a-42f000aa32df",
      "name": "address",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "user.attribute.country": "country",
            "user.attribute.formatted": "formatted",
            "user.attribute.locality": "locality",
            "user.attribute.postal_code": "postal_code",
            "user.attribute.region": "region",
            "user.attribute.street": "street",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "4a6705a2-4a0a-4e5e-a88e-ac9b3c391586",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: email",
      "id": "66b8b542-4614-4854-9d9f-dd0ce03ff865",
      "name": "email",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "email",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "9d5243e4-99e1-4cbb-95fc-c8fb453c1f98",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "emailVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "8f30ea4b-680d-4a23-bf49-47d5fc7be1cc",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "true"
      },
      "description": "Microprofile - JWT built-in scope",
      "id": "54c79e8a-eac4-4aa5-9750-ac602830b439",
      "name": "microprofile-jwt",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "groups",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "55d36485-1d3e-417a-90fe-6e15cbeb9303",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "upn",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "ee6354c9-5452-4ff9-add1-f325d81b8095",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "",
        "display.on.consent.screen": "false",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect custom claim \"my\"",
      "id": "11969e38-69f8-48cb-b349-8ee24bd92ea7",
      "name": "my-custom-claim",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "my.user_id",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "userId",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c80d9d28-2a14-4a24-ab25-4a614eae8c97",
          "name": "user id",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "my.org_id",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "orgId",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "ad7144ec-fd98-4cf3-b54d-143f28fb3f2c",
          "name": "org id",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "OpenID Connect built-in scope: offline_access",
      "id": "b269f929-7e9b-46f3-aacd-f8f90cb6ecb2",
      "name": "offline_access",
      "protocol": "openid-connect"
    },
    {
      "attributes": {
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: phone",
      "id": "b0e00a57-d2f5-4e34-9a4d-78cb19228dfe",
      "name": "phone",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "phoneNumberVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "4ce07c4e-c69e-4fb7-83e5-f38b06b2e6c9",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "phoneNumber",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "cfe6be8b-700a-4914-afa7-66c43cf36f5d",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: profile",
      "id": "0d0e1bac-2629-4dbd-9520-e301ef73c2b3",
      "name": "profile",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "nickname",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "nickname",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "3eab4eca-96c3-4efc-961e-42ea2ca02e0c",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "family_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "lastName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "4b16d45a-7a7c-4482-a15f-e5be50294e86",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "gender",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "gender",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "fb1a9a59-a45b-4855-8c16-490f23f1d9da",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "birthdate",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a32bf792-bdd2-4ca8-a4fa-005fcf67af55",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "4711dcd0-761d-49f9-9b0e-c196b1c5cf2f",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c22ac257-f662-439a-970c-ba6a37340db3",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "20ce6ff8-6cc0-444d-9697-99d53be74db3",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "website",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "website",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "13c99955-9aab-4ecd-af3a-df687c82e95f",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "picture",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "picture",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "404065c7-995e-44c4-bdb1-ef740ed0b78f",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "given_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "firstName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "47f81582-e20a-4dd6-ba90-3605a1c1bb17",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "zoneinfo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "72e09fd2-6fb2-4e90-a9c1-52e6ba13ba85",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "updatedAt",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "55e357d0-2cdb-4410-89ac-26bd184ac4d3",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "profile",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "profile",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "4a46beb5-a18f-41a6-8c85-360aa58ebe02",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "middleName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "edbc4f07-0734-4f9a-8860-d3aac686e408",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "SAML role list",
      "id": "57112714-d5d7-4bc9-89dc-f28d674690e3",
      "name": "role_list",
      "protocol": "saml",
      "protocolMappers": [
        {
          "config": {
            "attribute.name": "Role",
            "attribute.nameformat": "Basic",
            "single": "false"
          },
          "consentRequired": false,
          "id": "7e5bf56d-4452-47bd-a230-c9fad30338e6",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add user roles to the access token",
      "id": "50a1bc08-5a94-48d7-8856-461b15fe5cf4",
      "name": "roles",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "d43e7729-9176-4b4a-98a5-ddefbd93a14a",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "bc110297-17e5-4081-aa9c-df43fe8a4855",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "462b9871-8e30-4b20-b30b-32871426939c",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "",
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "id": "245bbaf4-b921-4f29-af6b-219da16b7ad1",
      "name": "web-origins",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "7657eb63-1ac4-41be-9e3e-945e3645f6ee",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper"
        }
      ]
    }
  ],
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clients": [
    {
      "alwaysDisplayInConsole": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/my/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account",
      "consentRequired": false,
      "defaultClientScopes": [],
      "defaultRoles": [
        "manage-account",
        "view-profile"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "6f18e76d-4cac-4e99-920e-02ec68c1114a",
      "implicitFlowEnabled": false,
      "name": "${client_account}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [
        "/realms/my/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/my/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account-console",
      "consentRequired": false,
      "defaultClientScopes": [],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "adacc41d-2472-45b6-90d0-21783369f0f8",
      "implicitFlowEnabled": false,
      "name": "${client_account-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "d5ec611a-c24a-4156-bf35-2b05e19d8215",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/realms/my/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "admin-cli",
      "consentRequired": false,
      "defaultClientScopes": [],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "8e4b1b79-bf69-4100-8ddc-fd79f61bf8ba",
      "implicitFlowEnabled": false,
      "name": "${client_admin-cli}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [],
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "broker",
      "consentRequired": false,
      "defaultClientScopes": [],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "72033d04-9a54-498f-a2f3-f16dd04db544",
      "implicitFlowEnabled": false,
      "name": "${client_broker}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "adminUrl": "http://localhost:4000",
      "alwaysDisplayInConsole": false,
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "my-app",
      "consentRequired": false,
      "defaultClientScopes": [
        "role_list",
        "profile",
        "roles",
        "my-custom-claim",
        "email"
      ],
      "description": "frontend binding single-page-app",
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "5dcb0a15-668a-4413-96a9-6d3b6816f4f4",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [
        "http://localhost:8000/*",
        "http://localhost:4000/*"
      ],
      "rootUrl": "http://localhost:4000",
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "http://localhost:8000",
        "http://localhost:4000"
      ]
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "my-bearer",
      "consentRequired": false,
      "defaultClientScopes": [
        "role_list",
        "profile",
        "roles",
        "my-custom-claim",
        "email"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "10bb89cd-3277-43c9-afe2-c3a9c803fa70",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "adminUrl": "http://localhost:4000",
      "alwaysDisplayInConsole": false,
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "my-server",
      "consentRequired": false,
      "defaultClientScopes": [
        "role_list",
        "profile",
        "roles",
        "my-custom-claim",
        "email"
      ],
      "description": "backend binding server",
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "a7266e1e-b115-42b3-8646-486cc3035e4e",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [
        "http://localhost:4000/*"
      ],
      "rootUrl": "http://localhost:4000",
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "http://localhost:4000"
      ]
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "my-service",
      "consentRequired": false,
      "defaultClientScopes": [
        "role_list"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "6c38e274-b36e-4ed8-9ab1-8e54da0fb47d",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientId",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientId"
          },
          "consentRequired": false,
          "id": "615a66cc-a15f-47e8-96d4-9ecffe5bff48",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientAddress"
          },
          "consentRequired": false,
          "id": "a09f015c-010f-4fbb-abef-7afab24d5dad",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientHost"
          },
          "consentRequired": false,
          "id": "da0ed145-5b64-44ef-bc7a-b072603504c0",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        }
      ],
      "publicClient": false,
      "redirectUris": [],
      "secret": "26a99040-e02b-4d51-a7d8-88c694632205",
      "serviceAccountsEnabled": true,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "my-service-client",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "97dbcec9-a921-4b77-8881-bda53458df1d",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientId",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientId"
          },
          "consentRequired": false,
          "id": "ac52cd3e-2f0e-4e73-829e-9fb37b7e98f9",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientHost"
          },
          "consentRequired": false,
          "id": "d588479c-b38e-404a-8b2a-cd346cc26fd9",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientAddress"
          },
          "consentRequired": false,
          "id": "caeedf3e-8b63-49c0-8dfc-f451b3f650ef",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        }
      ],
      "publicClient": false,
      "redirectUris": [],
      "secret": "ce79e903-4e30-4a1a-b445-7917a9af3b52",
      "serviceAccountsEnabled": true,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "realm-management",
      "consentRequired": false,
      "defaultClientScopes": [],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "b20d99c6-4f88-46fa-b40f-39142963b192",
      "implicitFlowEnabled": false,
      "name": "${client_realm-management}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/admin/my/console/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "security-admin-console",
      "consentRequired": false,
      "defaultClientScopes": [],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "9254796d-add9-4131-97cf-9690f70922b5",
      "implicitFlowEnabled": false,
      "name": "${client_security-admin-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "181b6eb1-41ed-44bf-a4fa-21ef8e2a22a0",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/admin/my/console/*"
      ],
      "rootUrl": "${authAdminUrl}",
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "+"
      ]
    }
  ],
  "components": {
    "org.keycloak.keys.KeyProvider": [
      {
        "config": {
          "priority": [
            "100"
          ]
        },
        "id": "414f18e4-4fc0-4085-8b31-472294cf77f1",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {}
      },
      {
        "config": {
          "algorithm": [
            "HS256"
          ],
          "priority": [
            "100"
          ]
        },
        "id": "2d90b1ba-b47a-4016-a8d0-7a6d212c69d8",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {}
      },
      {
        "config": {
          "priority": [
            "100"
          ]
        },
        "id": "f71833cd-326b-43e6-8121-69d9202c2947",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {}
      }
    ],
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "config": {
          "client-uris-must-match": [
            "true"
          ],
          "host-sending-registration-request-must-match": [
            "true"
          ]
        },
        "id": "ef5bbf0c-6499-435d-94cb-20f461d249d2",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "07459770-20d1-4b9c-a201-815d4d5c3e44",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {},
        "id": "0109b22f-1ce2-48a1-9d00-39f123333ad5",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        },
        "id": "d615736f-5725-48de-a449-a7b162b6f102",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "max-clients": [
            "200"
          ]
        },
        "id": "39d861a9-a278-4d55-abc1-f17bee790e2d",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "f01c80c0-8579-47ab-8d3b-efa103ebab59",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper"
          ]
        },
        "id": "aabcb3c7-9aac-4074-a8bb-22a42f6d0e77",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {},
        "id": "4b05c5f4-83d4-483b-bc63-931a51310174",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subComponents": {},
        "subType": "anonymous"
      }
    ],
    "org.keycloak.storage.UserStorageProvider": [
      {
        "config": {
          "allowKerberosAuthentication": [
            "false"
          ],
          "authType": [
            "simple"
          ],
          "batchSizeForSync": [
            "1000"
          ],
          "bindCredential": [
            "ldap-password"
          ],
          "bindDn": [
            "cn=Administrator,cn=Users,dc=example,dc=local"
          ],
          "cachePolicy": [
            "DEFAULT"
          ],
          "changedSyncPeriod": [
            "-1"
          ],
          "connectionPooling": [
            "true"
          ],
          "connectionUrl": [
            "ldap://host.docker.internal:1389"
          ],
          "debug": [
            "false"
          ],
          "editMode": [
            "WRITABLE"
          ],
          "enabled": [
            "true"
          ],
          "fullSyncPeriod": [
            "-1"
          ],
          "importEnabled": [
            "false"
          ],
          "pagination": [
            "false"
          ],
          "priority": [
            "0"
          ],
          "rdnLDAPAttribute": [
            "cn"
          ],
          "searchScope": [
            "1"
          ],
          "syncRegistrations": [
            "true"
          ],
          "trustEmail": [
            "false"
          ],
          "useKerberosForPasswordAuthentication": [
            "false"
          ],
          "useTruststoreSpi": [
            "ldapsOnly"
          ],
          "userObjectClasses": [
            "person, organizationalPerson, user"
          ],
          "usernameLDAPAttribute": [
            "cn"
          ],
          "usersDn": [
            "cn=Users,dc=example,dc=local"
          ],
          "uuidLDAPAttribute": [
            "objectGUID"
          ],
          "validatePasswordPolicy": [
            "false"
          ],
          "vendor": [
            "ad"
          ]
        },
        "id": "443fc27b-a197-403f-b54e-7b326ab4b2cc",
        "name": "my-ldap",
        "providerId": "ldap",
        "subComponents": {
          "org.keycloak.storage.ldap.mappers.LDAPStorageMapper": [
            {
              "config": {
                "always.read.value.from.ldap": [
                  "true"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "ldap.attribute": [
                  "uid"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "userId"
                ]
              },
              "id": "d2af564b-595a-4a9b-9831-b9191dd2b3e0",
              "name": "userId",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "true"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "ldap.attribute": [
                  "locale"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "locale"
                ]
              },
              "id": "eb41e66b-7422-4042-b82f-65c68e668294",
              "name": "locale",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "true"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "ldap.attribute": [
                  "whenChanged"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "modifyTimestamp"
                ]
              },
              "id": "01764046-3714-45af-8b33-3c992516be3a",
              "name": "modify date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {},
              "id": "d739ce22-c3fc-481e-afe4-74ccdc9bf4c7",
              "name": "MSAD account controls",
              "providerId": "msad-user-account-control-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "true"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "ldap.attribute": [
                  "whenCreated"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "createTimestamp"
                ]
              },
              "id": "c61baa7c-a57f-465a-85b5-6aa853badca3",
              "name": "creation date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "false"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "ldap.attribute": [
                  "cn"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "username"
                ]
              },
              "id": "4a8a31e5-7d63-47f3-bd8f-d61bb603040b",
              "name": "username",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "true"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "ldap.attribute": [
                  "givenName"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "firstName"
                ]
              },
              "id": "6a97523e-8792-4ac8-ac71-bb26e74f972b",
              "name": "first name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "true"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "ldap.attribute": [
                  "sn"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "lastName"
                ]
              },
              "id": "ef8fa02f-f35f-49d4-8d4c-a835620f41ad",
              "name": "last name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "is.binary.attribute": [
                  "false"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "ldap.attribute": [
                  "emailverified"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "emailVerified"
                ]
              },
              "id": "8e9b840d-a713-462e-b186-3aea9afc0bae",
              "name": "email verified",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "memberof.ldap.attribute": [
                  "memberOf"
                ],
                "membership.attribute.type": [
                  "DN"
                ],
                "membership.ldap.attribute": [
                  "member"
                ],
                "membership.user.ldap.attribute": [
                  "cn"
                ],
                "mode": [
                  "LDAP_ONLY"
                ],
                "role.name.ldap.attribute": [
                  "cn"
                ],
                "role.object.classes": [
                  "group"
                ],
                "roles.dn": [
                  "ou=RealmRoles,dc=example,dc=local"
                ],
                "use.realm.roles.mapping": [
                  "true"
                ],
                "user.roles.retrieve.strategy": [
                  "GET_ROLES_FROM_USER_MEMBEROF_ATTRIBUTE"
                ]
              },
              "id": "73ddfc0a-a3d1-4a38-afba-2ba2caced887",
              "name": "role mapper",
              "providerId": "role-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "false"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "ldap.attribute": [
                  "oid"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "orgId"
                ]
              },
              "id": "88d0707f-28d2-4957-b189-41776a17e3dc",
              "name": "orgId",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "false"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "ldap.attribute": [
                  "mail"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "email"
                ]
              },
              "id": "dfa127d3-6f94-430d-85e6-592ac1d1f769",
              "name": "email",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            }
          ]
        }
      }
    ]
  },
  "defaultDefaultClientScopes": [
    "profile",
    "web-origins",
    "roles",
    "role_list",
    "email"
  ],
  "defaultOptionalClientScopes": [
    "microprofile-jwt",
    "address",
    "phone",
    "offline_access"
  ],
  "defaultRoles": [
    "offline_access",
    "uma_authorization"
  ],
  "directGrantFlow": "direct grant",
  "dockerAuthenticationFlow": "docker auth",
  "duplicateEmailsAllowed": false,
  "editUsernameAllowed": false,
  "enabled": true,
  "enabledEventTypes": [],
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "failureFactor": 30,
  "groups": [],
  "id": "my",
  "internationalizationEnabled": false,
  "keycloakVersion": "12.0.4",
  "loginWithEmailAllowed": true,
  "maxDeltaTimeSeconds": 43200,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "notBefore": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespan": 5184000,
  "offlineSessionMaxLifespanEnabled": false,
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyDigits": 6,
  "otpPolicyInitialCounter": 0,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyType": "totp",
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "permanentLockout": false,
  "quickLoginCheckMilliSeconds": 1000,
  "realm": "my",
  "refreshTokenMaxReuse": 0,
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "registrationFlow": "registration",
  "rememberMe": true,
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Configure OTP",
      "priority": 10,
      "providerId": "CONFIGURE_TOTP"
    },
    {
      "alias": "terms_and_conditions",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Terms and Conditions",
      "priority": 20,
      "providerId": "terms_and_conditions"
    },
    {
      "alias": "UPDATE_PASSWORD",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Password",
      "priority": 30,
      "providerId": "UPDATE_PASSWORD"
    },
    {
      "alias": "UPDATE_PROFILE",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Profile",
      "priority": 40,
      "providerId": "UPDATE_PROFILE"
    },
    {
      "alias": "VERIFY_EMAIL",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Verify Email",
      "priority": 50,
      "providerId": "VERIFY_EMAIL"
    },
    {
      "alias": "update_user_locale",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update User Locale",
      "priority": 1000,
      "providerId": "update_user_locale"
    }
  ],
  "requiredCredentials": [
    "password"
  ],
  "resetCredentialsFlow": "reset credentials",
  "resetPasswordAllowed": true,
  "revokeRefreshToken": false,
  "roles": {
    "client": {
      "account": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "6f18e76d-4cac-4e99-920e-02ec68c1114a",
          "description": "${role_view-applications}",
          "id": "9e1d1c8d-a32f-47ec-8c70-d8012d3d7793",
          "name": "view-applications"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "6f18e76d-4cac-4e99-920e-02ec68c1114a",
          "description": "${role_view-profile}",
          "id": "da2a89cc-7cdd-47ee-901e-66e77a8c0084",
          "name": "view-profile"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "6f18e76d-4cac-4e99-920e-02ec68c1114a",
          "description": "${role_manage-account-links}",
          "id": "8471bd7e-a72b-40a3-a295-04c820fc5005",
          "name": "manage-account-links"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "containerId": "6f18e76d-4cac-4e99-920e-02ec68c1114a",
          "description": "${role_manage-account}",
          "id": "2f9e7f9c-c303-447f-b62a-e691f6c65ac6",
          "name": "manage-account"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "containerId": "6f18e76d-4cac-4e99-920e-02ec68c1114a",
          "description": "${role_manage-consent}",
          "id": "f652d448-f1be-4a94-adc2-ca4dfd8cbcc0",
          "name": "manage-consent"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "6f18e76d-4cac-4e99-920e-02ec68c1114a",
          "description": "${role_view-consent}",
          "id": "9e11b8ee-c566-4375-8a00-dcff621b5584",
          "name": "view-consent"
        }
      ],
      "account-console": [],
      "admin-cli": [],
      "broker": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "72033d04-9a54-498f-a2f3-f16dd04db544",
          "description": "${role_read-token}",
          "id": "1ada1e6c-e5ed-4bc7-a607-2a750ff6563f",
          "name": "read-token"
        }
      ],
      "my-app": [],
      "my-bearer": [],
      "my-server": [],
      "my-service": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "6c38e274-b36e-4ed8-9ab1-8e54da0fb47d",
          "id": "3da32771-b4bc-4c97-bb25-71ddd49d915b",
          "name": "test"
        }
      ],
      "my-service-client": [],
      "realm-management": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_view-events}",
          "id": "dd8f5057-f142-476b-8107-22125a8c5e88",
          "name": "view-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_view-identity-providers}",
          "id": "8d101289-137a-4145-816d-f72f6da72973",
          "name": "view-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_view-realm}",
          "id": "e06df9ad-38c6-4f65-bc6b-0ecf16beab2b",
          "name": "view-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_query-clients}",
          "id": "c3aaef80-48eb-4c64-889c-f7a6b758b10c",
          "name": "query-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_query-groups}",
          "id": "8c21972e-4e92-4cb7-bfc5-4f088f594835",
          "name": "query-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_create-client}",
          "id": "f9895b58-b083-41e3-8abf-769d60fd74b0",
          "name": "create-client"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_query-users}",
          "id": "520f2d67-eac2-40ca-84d3-f3fd954ca35e",
          "name": "query-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_view-users}",
          "id": "4fb1c0b3-2543-4115-aef2-71313e944648",
          "name": "view-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_query-realms}",
          "id": "bc610a21-71ba-410e-8dd7-9e782d6e8760",
          "name": "query-realms"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_view-clients}",
          "id": "caf0eb04-3c47-42f2-9d00-b9417278f1ca",
          "name": "view-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_view-authorization}",
          "id": "91c7dba9-afaf-432e-9fd3-d8e530c94831",
          "name": "view-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_manage-identity-providers}",
          "id": "7b406257-03d3-42e2-9c1c-b5e5a7596187",
          "name": "manage-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_manage-clients}",
          "id": "715991c9-7022-4204-826c-2456fafa08ca",
          "name": "manage-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_manage-users}",
          "id": "adcc3020-570c-4ce9-b317-9b5eddfdd0cb",
          "name": "manage-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-identity-providers",
                "view-events",
                "query-groups",
                "query-clients",
                "view-realm",
                "create-client",
                "query-users",
                "view-users",
                "query-realms",
                "view-clients",
                "manage-identity-providers",
                "view-authorization",
                "manage-clients",
                "manage-users",
                "impersonation",
                "manage-realm",
                "manage-events",
                "manage-authorization"
              ]
            }
          },
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_realm-admin}",
          "id": "448187f1-c845-445e-b9a1-2954f0e64395",
          "name": "realm-admin"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_impersonation}",
          "id": "b6c8b23c-0b45-45c8-ac12-3034842a7829",
          "name": "impersonation"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_manage-realm}",
          "id": "c70d4667-1a70-4b9f-bb33-aa6f74cbe238",
          "name": "manage-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_manage-events}",
          "id": "54f9f2a1-a829-484d-9282-91c4d0e8198f",
          "name": "manage-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "b20d99c6-4f88-46fa-b40f-39142963b192",
          "description": "${role_manage-authorization}",
          "id": "660f2742-695a-4e36-9c7d-3485b10cd0af",
          "name": "manage-authorization"
        }
      ],
      "security-admin-console": []
    },
    "realm": [
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "my",
        "id": "fd56b195-6d0f-4a4d-98a6-e8b726ed511f",
        "name": "uma_authorization"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "my",
        "description": "${role_offline-access}",
        "id": "bec1a0f0-edde-4c02-b336-19112c247a5e",
        "name": "offline_access"
      }
    ]
  },
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "smtpServer": {
    "auth": "false",
    "from": "admin@my.local",
    "host": "host.docker.internal",
    "port": "1025",
    "ssl": "",
    "starttls": ""
  },
  "sslRequired": "external",
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionMaxLifespanRememberMe": 0,
  "supportedLocales": [],
  "userManagedAccessAllowed": false,
  "users": [
    {
      "clientRoles": {
        "account": [
          "view-profile",
          "manage-account"
        ]
      },
      "createdTimestamp": 1616077535653,
      "disableableCredentialTypes": [],
      "emailVerified": false,
      "enabled": true,
      "groups": [],
      "id": "f9002c24-bf50-402d-8197-ae651618ee32",
      "notBefore": 0,
      "realmRoles": [
        "uma_authorization",
        "offline_access"
      ],
      "requiredActions": [],
      "serviceAccountClientId": "my-service",
      "totp": false,
      "username": "service-account-my-service"
    },
    {
      "clientRoles": {
        "account": [
          "view-profile",
          "manage-account"
        ],
        "my-service": [
          "test"
        ]
      },
      "createdTimestamp": 1616077639878,
      "disableableCredentialTypes": [],
      "emailVerified": false,
      "enabled": true,
      "groups": [],
      "id": "d569e9bf-1fd0-4334-98fd-74d0918d682a",
      "notBefore": 0,
      "realmRoles": [
        "uma_authorization",
        "offline_access"
      ],
      "requiredActions": [],
      "serviceAccountClientId": "my-service-client",
      "totp": false,
      "username": "service-account-my-service-client"
    }
  ],
  "verifyEmail": true,
  "waitIncrementSeconds": 60,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicyRpId": "",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyUserVerificationRequirement": "not specified"
}